library(data.table)
library(DESeq2)
library(ggplot2)
library(dplyr)
library(org.Hs.eg.db)
library(AnnotationDbi)
library(clusterProfiler)
library(ggbeeswarm)
library(DOSE)
library(ReactomePA)
library(EnhancedVolcano)
### CD vs PD ### Analysis of 6 cell lines of the right side of histogram vs ALL ###
setwd("C:\\Users/usuari/Desktop/TAS-102-RNA-Seq/DEG_Master_Table/RECIST/")
Rmatrix <- as.matrix(read.csv("RmatrixCDvsPD.txt", header = TRUE, sep = "\t", row.names = "Geneid"))
metaData <- as.matrix(read.csv("metaDataCDvsPD.txt", header = TRUE, sep = "\t"))
Rmatrix1 <- na.omit(Rmatrix)
dim(Rmatrix1)
dds <- DESeqDataSetFromMatrix(countData = Rmatrix1,
colData = metaData,
design = ~dex, tidy = FALSE)
### This command let us to save genes with more than 1 count, matrix is smaller ###
keep <- rowSums(counts(dds)) > 1
dds <- dds[keep,]
### Run DESeq2 ###
dds <- DESeq(dds)
res <- results(dds)
head(results(dds, tidy=TRUE))
### Sort by p.adj ###
res <- res[order(res$padj), ]
head(res)
### Filtering: multiple test correction: genes with padj < 0.2 ###
resSig <- subset(res, padj < 0.2)
head(resSig[ order(resSig$log2FoldChange, decreasing = FALSE), ]) #To see results
### Save dataframe wit gene name, log2FC, pvalue and padj
resSig_log2FC <- as.data.frame(cbind(resSig@rownames, resSig$log2FoldChange, resSig$pvalue, resSig$padj))
colnames(resSig_log2FC) <- c("GeneName", "log2FC", "pvalue", "padj")
### Now, we are filtering by log2FoldChange to clasify which are up or down regulated.
#Using the data that pass multiple test correction (ADJUSTED P-VALUE < 0.02)
log2FC_UP <- subset(resSig, resSig$log2FoldChange > 1.5)
log2FC_UP <- log2FC_UP[order(log2FC_UP$log2FoldChange, decreasing = TRUE), ]
log2FC_DOWN <- subset(resSig, resSig$log2FoldChange < -1.5)
log2FC_DOWN <- log2FC_DOWN[order(log2FC_DOWN$log2FoldChange, decreasing = FALSE), ]
View(resSig)
entrez_ids <- AnnotationDbi::select(org.Hs.eg.db,
keys = resSig@rownames, #Change Keys when you change the analysis
keytype = "SYMBOL",
columns = "ENTREZID")
View(entrez_ids)
entrez_ids <- entrez_ids[ , "ENTREZID"]
entrez_ids <- entrez_ids[!is.na(entrez_ids)]
KEGG_analysis <- enrichKEGG(entrez_ids,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
#universe,
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.2,
use_internal_data = FALSE)
KEGG_pathways <- as.data.frame(KEGG_analysis@result[["ID"]])
KEGG_pathways$`KEGG_analysis@result[["ID"]]`<- NULL
KEGG_pathways$ID=KEGG_analysis@result[["ID"]]
KEGG_pathways$Description=KEGG_analysis@result[["Description"]]
KEGG_pathways$geneID=KEGG_analysis@result[["geneID"]]
KEGG_pathways$Count=KEGG_analysis@result[["Count"]]
KEGG_pathways$p_adjust=KEGG_analysis@result[["p.adjust"]]
KEGG_pathways$pvalue=KEGG_analysis@result[["pvalue"]]
KEGG_pathways$GeneRatio=KEGG_analysis@result[["GeneRatio"]]
View(KEGG_pathways)
